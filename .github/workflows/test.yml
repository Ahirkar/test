name: Build and Deploy

on:
  push:
    branches:
      - main
      - development
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet_version:
          - '5.0.x'
   steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Check the branch and select the envirnoment
        id: branch_check
        run: |
          echo "Running on branch ${{ github.ref }}"
          if [ "${{ github.ref }}" = "refs/heads/master" ]; then
            echo "env_name=dev" >> $GITHUB_OUTPUT
      - name: Use variable setup in previous step
        run: echo "Using envirnoment ${{ steps.branch_check.outputs.env_name }}"
    outputs:
      env_name: ${{ steps.branch_check.outputs.env_name }}  
      
  build:
    runs-on: ubuntu-latest
    needs: envbranch
    
    environment:
      name: ${{ needs.envbranch.outputs.env_name }}
    env:
      duplo_token: "${{ secrets.DUPLO_TOKEN }}"
      TENANT_NAME: "${{ vars.TENANT_NAME }}"
      SERVICE_NAME: "${{ vars.SERVICE_NAME }}"
      duplo_host: "${{ vars.duplo_host }}"
   steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet_version }}

      - name: Restore Dependencies and Build
        run: |
          cd EmployeeMasterWebAPI/
          dotnet --version
          dotnet restore
          dotnet build

      - name: Publish Artifact
        run: |
          dotnet test
          dotnet publish -c Release -o ./publish
      
      - name: Get AWS credentials
        uses: duplocloud/ghactions-aws-jit@master
        with:
          tenant: default
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
    steps:
        - uses: actions/checkout@v4
        - name: Setup dotnet
          uses: actions/setup-dotnet@v3
          with:
            dotnet-version: '5.0.x'
        - name: Install dependencies
          run: dotnet restore
        - name: Build
          run: dotnet build
        - name: Test with the dotnet CLI
          run: dotnet test
        - name: Build and Push Docker Image

         # Build and push the docker image
       - name: Docker Build and Push
         uses: docker/build-push-action@v2
         with:
          context: .
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ env.SERVICE_NAME }}:${{ needs.envbranch.outputs.env_name }}-${{ github.sha }}
            
    outputs:
      image: "${{ steps.login-ecr.outputs.registry }}/${{ env.SERVICE_NAME }}:${{ needs.envbranch.outputs.env_name }}-${{ github.sha }}"   


 deploy:
    runs-on: ubuntu-latest
    needs: 
      - envbranch
      - build
      
    environment:
      name: ${{ needs.envbranch.outputs.env_name }}
    env:
      duplo_token: "${{ secrets.DUPLO_TOKEN }}"
      TENANT_NAME: "${{ vars.TENANT_NAME }}"
      SERVICE_NAME: "${{ vars.SERVICE_NAME }}"
      duplo_host: "${{ vars.duplo_host }}"
      
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      # Update the backend service to use the new image.
      - name: Deploy
        uses: duplocloud/ghactions-service-update@master
        with:
          tenant: "${{ env.TENANT_NAME }}"
          services: |-
            [
              { "Name": "${{ env.SERVICE_NAME }}", "Image": "${{ needs.build.outputs.image }}" }
            ]
